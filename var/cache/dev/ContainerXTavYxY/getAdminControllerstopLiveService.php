<?php

namespace ContainerXTavYxY;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getAdminControllerstopLiveService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private '.service_locator.DlRivUT.App\Controller\AdminController::stopLive()' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->privates['.service_locator.DlRivUT.App\\Controller\\AdminController::stopLive()'] = (new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'live' => ['privates', 'App\\Entity\\Live', 'getLiveService', true],
            'em' => ['services', 'doctrine.orm.default_entity_manager', 'getDoctrine_Orm_DefaultEntityManagerService', false],
            'usersRepository' => ['privates', 'App\\Repository\\UsersRepository', 'getUsersRepositoryService', true],
        ], [
            'live' => 'App\\Entity\\Live',
            'em' => '?',
            'usersRepository' => 'App\\Repository\\UsersRepository',
        ]))->withContext('App\\Controller\\AdminController::stopLive()', $container);
    }
}
