<?php

namespace ContainerXTavYxY;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getInscriptionServiceService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'App\Service\InscriptionService' shared autowired service.
     *
     * @return \App\Service\InscriptionService
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/src/Service/InscriptionService.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/security-http/Authentication/UserAuthenticatorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/security-bundle/Security/FirewallAwareTrait.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/security-bundle/Security/UserAuthenticator.php';

        $a = ($container->privates['security.firewall.map'] ?? self::getSecurity_Firewall_MapService($container));

        if (isset($container->privates['App\\Service\\InscriptionService'])) {
            return $container->privates['App\\Service\\InscriptionService'];
        }

        return $container->privates['App\\Service\\InscriptionService'] = new \App\Service\InscriptionService(($container->services['doctrine.orm.default_entity_manager'] ?? self::getDoctrine_Orm_DefaultEntityManagerService($container)), ($container->privates['security.user_password_hasher'] ?? $container->load('getSecurity_UserPasswordHasherService')), new \Symfony\Bundle\SecurityBundle\Security\UserAuthenticator($a, new \Symfony\Component\DependencyInjection\ServiceLocator(['main' => #[\Closure(name: 'security.authenticator.manager.main', class: 'Symfony\\Component\\Security\\Http\\Authentication\\AuthenticatorManager')] fn () => ($container->privates['security.authenticator.manager.main'] ?? $container->load('getSecurity_Authenticator_Manager_MainService')), 'api_login' => #[\Closure(name: 'security.authenticator.manager.api_login', class: 'Symfony\\Component\\Security\\Http\\Authentication\\AuthenticatorManager')] fn () => ($container->privates['security.authenticator.manager.api_login'] ?? $container->load('getSecurity_Authenticator_Manager_ApiLoginService'))]), ($container->services['request_stack'] ??= new \Symfony\Component\HttpFoundation\RequestStack())), ($container->privates['App\\Security\\LoginAuthenticator'] ?? $container->load('getLoginAuthenticatorService')));
    }
}
